{"version":3,"sources":["index.tsx"],"names":["Square","props","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","className","onClick","value","Board","i","_this","this","squares","renderSquare","React","Component","Game","_this2","Object","_mnt_c_Users_sho_inada_git_share_learn_react_web_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","_mnt_c_Users_sho_inada_git_share_learn_react_web_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_mnt_c_Users_sho_inada_git_share_learn_react_web_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","state","history","Array","fill","stepNumber","xIsNext","length","slice","calculateWinner","setState","concat","step","status","_this3","current","winner","moves","map","move","desc","key","href","jumpTo","handleClick","lines","_lines$i","_mnt_c_Users_sho_inada_git_share_learn_react_web_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","b","c","ReactDOM","render","document","getElementById"],"mappings":"oLAWA,SAASA,EAAOC,GACd,OACEC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,SAASC,QAASL,EAAMK,SACvCL,EAAMM,WAKPC,uLACSC,GAAW,IAAAC,EAAAC,KACtB,OAAOT,EAAAC,EAAAC,cAACJ,EAAD,CAAQO,MAAOI,KAAKV,MAAMW,QAAQH,GAAIH,QAAS,kBAAMI,EAAKT,MAAMK,QAAQG,uCAG/E,OACEP,EAAAC,EAAAC,cAAA,WAEEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACZM,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,IAErBX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACZM,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,IAErBX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACZM,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,YArBTC,IAAMC,WAoCpBC,cACJ,SAAAA,EAAYf,GAAY,IAAAgB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAP,KAAAK,IACtBC,EAAAC,OAAAE,EAAA,EAAAF,CAAAP,KAAAO,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAAX,KAAMV,KACDsB,MAAQ,CACXC,QAAS,CAAC,CACRZ,QAASa,MAAkB,GAAGC,KAAK,QAErCC,WAAY,EACZC,SAAS,GAPWX,2EAUZR,GACV,IAAIe,EAAUb,KAAKY,MAAMC,QAEnBZ,EADQY,EAAQA,EAAQK,OAAS,GACfjB,QAAQkB,QAC5BC,EAAgBnB,IAAYA,EAAQH,KAGxCG,EAAQH,GAAKE,KAAKY,MAAMK,QAAU,IAAM,IACxCjB,KAAKqB,SAAS,CACZR,QAASA,EAAQS,OAAO,CAAC,CACvBrB,QAASA,KAEXe,WAAYH,EAAQK,OACpBD,SAAUjB,KAAKY,MAAMK,0CAGlBM,GACLvB,KAAKqB,SAAS,CACZL,WAAYO,EACZN,UAAUM,EAAO,sCAGZ,IAIHC,EAJGC,EAAAzB,KACDa,EAAUb,KAAKY,MAAMC,QAAQM,MAAM,EAAGnB,KAAKY,MAAMI,WAAa,GAC9DU,EAAUb,EAAQb,KAAKY,MAAMI,YAC7BW,EAASP,EAAgBM,EAAQzB,SAGrCuB,EADEG,EACO,aAAeA,EAEf,iBAAmB3B,KAAKY,MAAMK,QAAS,IAAM,KAExD,IAAMW,EAAQf,EAAQgB,IAAI,SAACN,EAAMO,GAC/B,IAAMC,EAAOD,EACX,SAAWA,EACX,aACF,OACEvC,EAAAC,EAAAC,cAAA,MAAIuC,IAAKF,GACPvC,EAAAC,EAAAC,cAAA,KAAGwC,KAAK,IAAItC,QAAS,kBAAM8B,EAAKS,OAAOJ,KAAQC,MAKrD,OACExC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAACI,EAAD,CACEI,QAASyB,EAAQzB,QACjBN,QAAS,SAACG,GAAD,OAAe2B,EAAKU,YAAYrC,OAG7CP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,WAAM+B,GACNjC,EAAAC,EAAAC,cAAA,UAAKmC,YAhEIzB,IAAMC,WA8EzB,SAASgB,EAAgBnB,GAWvB,IAVA,IAAMmC,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEAtC,EAAI,EAAGA,EAAIsC,EAAMlB,OAAQpB,IAAK,KAAAuC,EAAA9B,OAAA+B,EAAA,EAAA/B,CACnB6B,EAAMtC,GADa,GAC9BN,EAD8B6C,EAAA,GAC3BE,EAD2BF,EAAA,GACxBG,EADwBH,EAAA,GAErC,GAAIpC,EAAQT,IAAMS,EAAQT,KAAOS,EAAQsC,IAAMtC,EAAQT,KAAOS,EAAQuC,GACpE,OAAOvC,EAAQT,GAGnB,OAAO,KAtBTiD,IAASC,OACPnD,EAAAC,EAAAC,cAACY,EAAD,MACAsC,SAASC,eAAe","file":"static/js/main.1bfff282.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\ntype SquareType = string | null;\ninterface SquareProps {\n  value: SquareType;\n  onClick: () => void;\n}\nfunction Square(props: SquareProps) {\n  return (\n    <button className=\"square\" onClick={props.onClick}>\n      {props.value}\n    </button>\n  )\n}\n\nclass Board extends React.Component<any> {\n  renderSquare(i: number) {\n    return <Square value={this.props.squares[i]} onClick={() => this.props.onClick(i)}/>;\n  }\n  render() {\n    return (\n      <div>\n        {/* <div className=\"status\">{status}</div> */}\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n    );\n  }\n}\n\ninterface BoardState {\n  squares: Array<SquareType>;\n}\ninterface GameState {\n  history: Array<BoardState>;\n  stepNumber: number;\n  xIsNext: boolean;\n}\nclass Game extends React.Component<any, GameState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array<SquareType>(9).fill(null),\n      }],\n      stepNumber: 0,\n      xIsNext: true,\n    }\n  }\n  handleClick(i: number) {\n    var history = this.state.history;\n    var current = history[history.length - 1];\n    const squares = current.squares.slice();\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      history: history.concat([{\n        squares: squares\n      }]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext,\n    });\n  }\n  jumpTo(step: number) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: (step % 2) ? false : true,\n    });\n  }\n  render() {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n    let status;\n    if (winner) {\n      status = 'Winner is ' + winner;\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext? 'X' : 'O');\n    }\n    const moves = history.map((step, move) => {\n      const desc = move ?\n        'Move #' + move :\n        'Game start';\n      return (\n        <li key={move}>\n          <a href=\"#\" onClick={() => this.jumpTo(move)}>{desc}</a>\n        </li>\n      );\n    });\n\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board\n            squares={current.squares}\n            onClick={(i: number) => this.handleClick(i)}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          <ol>{moves}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('container')\n);\n\nfunction calculateWinner(squares: SquareType[]) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n"],"sourceRoot":""}